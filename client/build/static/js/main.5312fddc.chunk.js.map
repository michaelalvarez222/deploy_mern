{"version":3,"sources":["components/AllPets.js","components/NewPet.js","components/ShowPet.js","components/EditPet.js","App.js","reportWebVitals.js","index.js"],"names":["AllPets","useState","allPets","setAllPets","useHistory","useEffect","axios","get","then","res","console","log","data","results","catch","err","class","map","pet","i","scope","_id","name","type","to","NewPet","history","description","skill1","skill2","skill3","formInfo","setFormInfo","validationErrors","setValidationErrors","changeHandler","e","target","value","onSubmit","preventDefault","post","errors","push","className","htmlFor","onChange","id","placeholder","message","ShowPet","useParams","petInfo","setPetInfo","onClick","delete","EditPet","put","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5312fddc.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\nimport { Link } from \"react-router-dom\"\nimport { useHistory } from 'react-router';\n\nconst AllPets = () => {\n\n    const [allPets, setAllPets] = useState([])\n\n    const [deleteProductClicked, setDeleteProductClicked] = useState()\n\n    const history = useHistory()\n\n    useEffect(()=>{\n        axios.get(\"http://localhost:8000/api/pets\")\n            .then(res=>{\n                console.log(\"this the res\",res)\n                setAllPets(res.data.results)\n            })\n            .catch(err=> console.log(\"this the err\",err))\n    },[])\n\n\n    return (\n        <div>\n            <h4>These pets are looking for a good home</h4>\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {allPets.map((pet,i)=>{\n                        return (\n                            <tr>\n                                <th scope=\"row\">{pet._id}</th>\n                                <td>{pet.name}</td>\n                                <td>{pet.type}</td>\n                                <td><Link to={`/pet/${pet._id}`}>Details</Link> | <Link to={`/pet/edit/${pet._id}`}>Edit</Link></td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\n\nexport default AllPets;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory} from 'react-router';\nimport { Link } from \"react-router-dom\"\n\nconst NewPet = () => {\n\n    const history = useHistory()\n\n    let [formInfo, setFormInfo] = useState({\n        name: null,\n        description: null,\n        type: null,\n        skill1: null,\n        skill2: null,\n        skill3: null\n    })\n\n    let [validationErrors, setValidationErrors] = useState({})\n\n    const changeHandler = (e)=>{\n        console.log(\"form is getting there\")\n        setFormInfo({\n            ...formInfo,\n            [e.target.name]:e.target.value\n        })\n    }\n\n    const submitHandler = (e)=>{\n        e.preventDefault()\n        console.log(\"the info is\",formInfo)\n        axios.post(\"http://localhost:8000/api/pet/create\", formInfo)\n            .then(res=>{\n                if(res.data.err){\n                    setValidationErrors(res.data.err.errors)\n\n                }\n                else{\n                    console.log(\"res is \", res)\n                    history.push(\"/\")\n                }\n            })\n            .catch(err=>console.log(\"err is\", err))\n    }\n    return (\n        <div>\n            <h1>Know A pet needing a home?</h1>\n            <form onSubmit={submitHandler}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"formGroupExampleInput\">Name</label>\n                    <input type=\"text\" onChange = {changeHandler} className=\"form-control\" id=\"formGroupExampleInput\" name=\"name\" placeholder=\"Example input\"/>\n                    <p className=\"text-danger\">{validationErrors.name? validationErrors.name.message: \"\"}</p>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"formGroupExampleInput2\">Type</label>\n                    <input type=\"text\" onChange = {changeHandler} className=\"form-control\" id=\"formGroupExampleInput2\" name=\"type\" placeholder=\"Another input\"/>\n                    <p className=\"text-danger\">{validationErrors.type? validationErrors.type.message: \"\"}</p>\n                </div><br />\n                <div className=\"form-group\">\n                    <label htmlFor=\"formGroupExampleInput2\">Description</label>\n                    <input type=\"text\" onChange = {changeHandler} className=\"form-control\" id=\"formGroupExampleInput2\" name=\"description\" placeholder=\"Another input\"/>\n                    <p className=\"text-danger\">{validationErrors.description? validationErrors.description.message: \"\"}</p>\n                </div>\n                <h1>Skills (Optional)</h1>\n                <div className=\"form-group\">\n                    <label htmlFor=\"formGroupExampleInput2\">Skill</label>\n                    <input type=\"text\" onChange = {changeHandler} className=\"form-control\" id=\"formGroupExampleInput2\" name=\"skill1\" placeholder=\"Another input\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"formGroupExampleInput2\">Skill</label>\n                    <input type=\"text\" onChange = {changeHandler} className=\"form-control\" id=\"formGroupExampleInput2\" name=\"skill2\" placeholder=\"Another input\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"formGroupExampleInput2\">Skill</label>\n                    <input type=\"text\" onChange = {changeHandler} className=\"form-control\" id=\"formGroupExampleInput2\" name=\"skill3\" placeholder=\"Another input\"/>\n                </div>\n                <input className=\"btn btn-primary\" type=\"submit\" value=\"Add Pet\" />\n                <Link className=\"btn btn-info\"to=\"/\">Home</Link>\n            </form>\n        </div>\n    );\n};\n\n\nexport default NewPet;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router';\nimport { Link } from \"react-router-dom\"\n\n\nconst ShowPet = () => {\n\n    const { _id } = useParams()\n\n    const [petInfo, setPetInfo] = useState({})\n\n\n    const history = useHistory()\n\n    useEffect(()=>{\n        axios.get(`http://localhost:8000/api/pet/${_id}`)\n            .then(res=>{\n                console.log(\"this is the res\", res)\n                setPetInfo(res.data.results)\n            })\n            .catch(err=>console.log(\"your err is \", err))\n    },[_id])\n\n        const deletePet = ()=>{\n            console.log(\"deleteeeee\", petInfo._id)\n            axios.delete(`http://localhost:8000/api/pet/${petInfo._id}`)\n                .then(res=>{\n                    console.log(\"res is \", res)\n                    history.push(\"/\")\n                    \n                })\n                .catch(err=> console.log(\"err is\", err))\n        }\n\n    return (\n        <div>\n            <h1>Details about: {petInfo.name}</h1>\n            <p>Pet Type: {petInfo.type}</p>\n            <p>Description: {petInfo.description}</p>\n            <p>Skills (IF PROVIDED): {petInfo.skill1},{petInfo.skill2},{petInfo.skill3}</p>\n            <p onClick={deletePet} className=\"btn btn-danger\">Adopt {petInfo.name}</p>\n            <Link className=\"btn btn-info\"to=\"/\">Home</Link>\n        </div>\n    );\n};\n\n\n\nexport default ShowPet;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory, useParams} from 'react-router';\nimport { Link } from \"react-router-dom\"\n\nconst EditPet = () => {\n\n    const history = useHistory()\n\n    const { _id } = useParams()\n\n    const [petInfo, setPetInfo] = useState({})\n\n    useEffect(()=>{\n        axios.get(`http://localhost:8000/api/pet/${_id}`)\n            .then(res=>{\n                console.log(\"this is the res\", res)\n                setPetInfo(res.data.results)\n            })\n            .catch(err=>console.log(\"your err is \", err))\n    },[])\n\n\n    const changeHandler = (e)=>{\n        console.log(\"form is getting there\")\n        setPetInfo({\n            ...petInfo,\n            [e.target.name]:e.target.value\n        })\n    }\n\n    const submitHandler = (e)=>{\n        e.preventDefault()\n        axios.put(`http://localhost:8000/api/pet/${_id}`, petInfo)\n        .then(res=>{\n            console.log(\"this is the res\", res)\n            history.push(\"/\")\n        })\n        .catch(err=> console.log(\"err is \", err))\n    }\n\n    return (\n        <div>\n            <h1>Edit {petInfo.name}</h1>\n            <form onSubmit={submitHandler}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"formGroupExampleInput\">Name</label>\n                    <input type=\"text\" onChange = {changeHandler} className=\"form-control\" id=\"formGroupExampleInput\" name=\"name\" value={petInfo.name} />\n                    {/* <p className=\"text-danger\">{validationErrors.name? validationErrors.name.message: \"\"}</p> */}\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"formGroupExampleInput2\">Type</label>\n                    <input type=\"text\" onChange = {changeHandler} className=\"form-control\" id=\"formGroupExampleInput2\" name=\"type\" value={petInfo.type} />\n                    {/* <p className=\"text-danger\">{validationErrors.type? validationErrors.type.message: \"\"}</p> */}\n                </div><br />\n                <div className=\"form-group\">\n                    <label htmlFor=\"formGroupExampleInput2\">Description</label>\n                    <input type=\"text\" onChange = {changeHandler} className=\"form-control\" id=\"formGroupExampleInput2\" name=\"description\" value={petInfo.description} />\n                    {/* <p className=\"text-danger\">{validationErrors.description? validationErrors.description.message: \"\"}</p> */}\n                </div>\n                <h1>Skills (Optional)</h1>\n                <div className=\"form-group\">\n                    <label htmlFor=\"formGroupExampleInput2\">Skill</label>\n                    <input type=\"text\" onChange = {changeHandler} className=\"form-control\" id=\"formGroupExampleInput2\" name=\"skill1\" value={petInfo.skill1} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"formGroupExampleInput2\">Skill</label>\n                    <input type=\"text\" onChange = {changeHandler} className=\"form-control\" id=\"formGroupExampleInput2\" name=\"skill2\" value={petInfo.skill2} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"formGroupExampleInput2\">Skill</label>\n                    <input type=\"text\" onChange = {changeHandler} className=\"form-control\" id=\"formGroupExampleInput2\" name=\"skill3\" value={petInfo.skill3} />\n                </div>\n                <br />\n                <input className=\"btn btn-primary\" type=\"submit\" value=\"Edit Pet\" />\n                <Link className=\"btn btn-info\"to=\"/\">Home</Link>\n\n            </form>\n        </div>\n    );\n};\n\n\nexport default EditPet;","import AllPets from \"./components/AllPets\";\nimport NewPet from \"./components/NewPet\";\nimport ShowPet from \"./components/ShowPet\";\nimport EditPet from \"./components/EditPet\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\"\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App container\">\n      <h1>Pet Shelter</h1>\n\n        <Switch>\n          <Route exact path = \"/\">\n            <Link className=\"btn btn-success\" to=\"/new\">Add a pet to the shelter</Link>\n            <AllPets></AllPets>\n          </Route>\n          <Route exact path = \"/new\">\n            \n            <NewPet></NewPet>\n          </Route>\n          <Route exact path = \"/pet/:_id\">\n            \n            <ShowPet></ShowPet>\n          </Route>\n          <Route exact path=\"/pet/edit/:_id\">\n            <EditPet></EditPet>\n          </Route>\n        </Switch>\n\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}